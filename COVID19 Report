-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country

Select Location, date, total_cases,total_deaths, (total_deaths *1.0/total_cases)*100 as Death_Percentage
From CovidDeaths
Where location like '%states%'
and continent is not null 
order by 1,2;


-- Total Cases vs Population
-- Shows the percentage of population in the United States infected with Covid

Select Location, date, Population, total_cases,  (total_cases*1.0/population)*100 as Percent_Population_Infected
From CovidDeaths
Where location like '%states%'
order by 1,2;


-- Countries with Highest Infection Rate compared to Population

Select Location, Population, MAX(total_cases) as Highest_Infection_Count, Max((total_cases *1.0/population))*100 as Percent_Population_Infected
From CovidDeaths
Group by Location, Population
order by Percent_Population_Infected desc;


-- Countries with Highest Death Count per Population

Select Location, MAX(cast(Total_deaths as int)) as Total_Death_Count
From CovidDeaths
Where continent is not null 
Group by Location
order by Total_Death_Count desc; 


-- Showing contintents with the highest death count per population

Select continent, MAX(cast(Total_deaths as int)) as Total_Death_Count
From CovidDeaths
Where continent is not null 
Group by continent
order by Total_Death_Count desc;



-- GLOBAL NUMBERS
SELECT SUM(new_cases) AS total_cases, SUM(cast(new_deaths AS int)) AS total_deaths, 
SUM(cast(new_deaths AS int))/SUM(New_Cases*1.0)*100 AS Death_Percentage
FROM CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 1,2;











-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(cast(vac.new_vaccinations as int)) 
OVER (Partition by dea.location Order by dea.location, dea.Date) as Rolling_Vaccinated
From CovidDeaths dea
Join CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null 
Order by 2,3;


-- Using CTE to perform Calculation on Partition By in previous query

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, Rolling_Vaccinated)
as
(Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(cast(vac.new_vaccinations as int)) 
OVER (Partition by dea.location Order by dea.location, dea.Date) as Rolling_Vaccinated
From CovidDeaths dea
Join CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null
Order by 1,2
)

Select *, (Rolling_Vaccinated*1.0/Population)*100 as Rolling_Vaccinated_Percentage
From PopvsVac;









-- Using Temp Table to perform Calculation on Partition By in previous query
DROP TABLE IF EXISTS Population_Vaccinated_Percentage; 
CREATE TABLE Population_Vaccinated_Percentage
(
Continent NVARCHAR(255),
Location NVARCHAR(255),
Date DATETIME,
Population NUMERIC,
New_Vaccinations NUMERIC,
Rolling_Vaccinated NUMERIC
);

INSERT INTO Population_Vaccinated_Percentage
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(cast(vac.new_vaccinations as int)) 
OVER (Partition by dea.location Order by dea.location, dea.Date) as Rolling_Vaccinated
From CovidDeaths dea
Join CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null
Order by 2,3; 

SELECT *, (Rolling_Vaccinated*1.0/Population)*100 as Population_Vaccinated_Percentage
FROM Population_Vaccinated_Percentage;


-- Creating View to store data for later visualizations

CREATE VIEW PVC AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(cast(vac.new_vaccinations as int)) 
OVER (Partition by dea.location Order by dea.location, dea.Date) as Rolling_Vaccinated
From CovidDeaths dea
Join CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null; 

